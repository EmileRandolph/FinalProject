version: "3"

services:
  EcommerceMongoDB:
    container_name: EcommerceMongoDB
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - ecommerce

  basketServiceDBRedis:
    container_name: basketServiceDBRedis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_cache:/data
    networks:
      - ecommerce

  ecommerceEurekaRegistry:
    container_name: ecommerceEurekaRegistry
    image: steeltoeoss/eureka-server:latest
    restart: always
    hostname: ecommerceEurekaRegistry
    ports:
      - 8761:8761
    networks:
      - ecommerce

  ecommerceGatewayOcelot:
    container_name: ecommerceGatewayOcelot
    build:
      context: ./OcelotGateway
      dockerfile: Dockerfile
    image: ecommerceocelotgatewayapi:1
    restart: always
    ports:
      - 5041:80
    networks:
      - ecommerce
    depends_on:
      - ecommerceEurekaRegistry

  ItemAPI:
    build:
      context: ./ItemAPI
      dockerfile: Dockerfile
    image: itemapi:1
    restart: always
    ports:
      - "8080:8080"
    networks:
      - ecommerce
    depends_on:
      - EcommerceMongoDB
      - ecommerceEurekaRegistry
      - ecommerceGatewayOcelot
    # deploy:
    #   mode: replicated
    #   replicas: 1

  ecommerceBasket:
    build:
      context: ./eCommerceBasket
      dockerfile: Dockerfile
    image: ecommercebasket:1
    restart: always
    ports:
      - "8081:8080"
    networks:
      - ecommerce
    depends_on:
      - basketServiceDBRedis
      - ecommerceEurekaRegistry
      - ecommerceGatewayOcelot
    # deploy:
    #   mode: replicated
    #   replicas: 1

  CheckOutService:
    build:
      context: ./CheckOutService
      dockerfile: Dockerfile
    image: checkoutservice:1
    restart: always
    ports:
      - "8082:8080"
    networks:
      - ecommerce
    depends_on:
      - EcommerceMongoDB
      - ecommerceEurekaRegistry
      - ecommerceGatewayOcelot
    # deploy:
    #   mode: replicated
    #   replicas: 1
volumes:
  mongodb_data_container:
  redis_cache:
    driver: local


networks:
  ecommerce:
    external: false
